name: Create weekly updates reminder
on:
  schedule:
    - cron: 00 10 * * 6

jobs:
  create_issue:
    name: Create weekly updates reminder
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Create weekly updates reminder
        run: |
          if [[ $CLOSE_PREVIOUS == true ]]; then
            previous_issue_number=$(gh issue list \
              --label "$LABELS" \
              --json number \
              --jq '.[0].number')
            if [[ -n $previous_issue_number ]]; then
              gh issue close "$previous_issue_number"
              gh issue unpin "$previous_issue_number"
            fi
          fi
          new_issue_url=$(gh issue create \
            --title "$TITLE" \
            --assignee "$ASSIGNEES" \
            --label "$LABELS" \
            --body "$BODY")
          if [[ $PINNED == true ]]; then
            gh issue pin "$new_issue_url"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          TITLE: Check weekly dependency updates
          ASSIGNEES: nicolasomar
          LABELS: dependencies
          BODY: |
            ### Objective

            Update ReactiveBulma's dependencies from last week new versions.

            ---
            ### Description

            In order to maintain a healthy project that can be used by the community, is needed to check all dependencies for possible updates, apply them and check functionality has not been affected
            
            In case of having issues after the mentioned updates, it will be necessary to fix those problems before push the changes and avoid affecting the community.
            
            ---
            ### Tasks
            
            - [ ] Run script for the update and wait until new versions have been installed. `npm run update`
            - [ ] Check linter suit runs without stoppers. `npm run lint`
            - [ ] Check prettier suit runs without stoppers. `npm run prettier && npm run prettier:ci`
            - [ ] Check test suit runs without stoppers and its coverage is correct. `npm run test:ci`
            - [ ] Check build process runs without stoppers. `npm run build`
            - [ ] Check storybook instance runs locally without stoppers and maintains the previous features. `npm run start`
            - [ ] Check storybook build process runs without stoppers. `npm run build:storybook`
            - [ ] Create the branch and PR associated to the changes mentioned above.
            - [ ] Wait until PR-related workflows run OK.
            - [ ] Once all steps have been completed, push the code with `fix: ` prefix for new package version.
          PINNED: false
          CLOSE_PREVIOUS: false
